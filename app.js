import { DeckScheduler } from './js/scheduler.js';
import { PracticeNavigator } from './js/practice_navigator.js';
import { initSwipeNavigation } from './js/swipe-nav.js';
import { getExplanation } from './js/explain.js';
const $=(s,p=document)=>p.querySelector(s), $$=(s,p=document)=>Array.from(p.querySelectorAll(s));
if('serviceWorker'in navigator) navigator.serviceWorker.register('./service-worker.js');
let deferredPrompt=null; window.addEventListener('beforeinstallprompt',e=>{e.preventDefault();deferredPrompt=e;$('#installBtn').hidden=false;});
$('#installBtn').onclick=async()=>{if(deferredPrompt){deferredPrompt.prompt();await deferredPrompt.userChoice;}};
let problems=[],scheduler=null,nav=null,current=null,voices=[],currentDeckId='builtin';
const settings={jpVoice:'',enVoice:'',delayJPEN:1,delayNext:1,repeatCount:1,volume:1,model:'gpt-4o-mini'}; let bgStarted=false;
const showToast=m=>{const t=$('#toast');t.textContent=m;t.classList.add('show');setTimeout(()=>t.classList.remove('show'),1200)};
const normalizeEN=s=>(s||'').replace(/[’‘']/g,"'").replace(/\s+/g,' ').trim(); const escapeHtml=s=>(s||'').replace(/[&<>"]/g,c=>({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;'}[c]));
const sleep=ms=>new Promise(r=>setTimeout(r,ms)); const clamp=(x,a,b)=>Math.max(a,Math.min(b,x)); const autoScroll=el=>el&&el.scrollIntoView({behavior:'smooth',block:'center'});
function switchTab(name){$$('nav.tabs button').forEach(b=>b.classList.remove('active'));$$('main .tab').forEach(s=>s.hidden=true);$(`nav.tabs button[data-tab="${name}"]`).classList.add('active');$(`#tab-${name}`).hidden=false;}
$$('nav.tabs button').forEach(b=>b.onclick=()=>switchTab(b.dataset.tab));
async function loadBuiltin(){const txt=await fetch('./data/builtin.csv?'+Date.now()).then(r=>r.text());const rows=txt.split(/\r?\n/).filter(Boolean).slice(1);problems=rows.map((l,i)=>{const m=l.split(/,(.+)/);return{id:'builtin:'+i,jp:(m[0]||'').trim(),en:(m[1]||'').trim()};});currentDeckId='builtin';afterData();}
$('#addBuiltin').onclick=loadBuiltin;
$('#csvInput').addEventListener('change',async e=>{const f=e.target.files[0];if(!f)return;const txt=await f.text();const rows=txt.split(/\r?\n/).filter(Boolean).slice(1);problems=rows.map((l,i)=>{const m=l.split(/,(.+)/);const jp=(m[0]||'').replace(/^"|"$/g,'').trim();const en=(m[1]||'').replace(/^"|"$/g,'').trim();return{id:'csv:'+i,jp,en};}).filter(x=>x.en);currentDeckId='csv:'+(f.name||'dataset');afterData();});
function afterData(){renderProblems();scheduler=new DeckScheduler({items:problems,deckId:currentDeckId});nav=new PracticeNavigator({getNextItem:()=>scheduler.next(),onRender:renderPractice,deckId:currentDeckId});nav.start();updateCounters();showToast('問題を読み込みました');switchTab('problems');}
function renderProblems(){const q=($('#searchProblems').value||'').toLowerCase();const list=$('#problemsList');list.innerHTML='';problems.forEach((p,i)=>{if(q&&!((p.jp+' '+p.en).toLowerCase().includes(q)))return;const d=document.createElement('div');d.className='item';d.id='prob-'+i;d.innerHTML=`<div><strong>${escapeHtml(p.jp)}</strong></div><div class="muted">${escapeHtml(p.en)}</div><div class="row"><button class="btn" data-play="${i}">読み上げ</button><button class="btn pri" data-practice="${i}">この問題で練習</button></div>`;list.appendChild(d);});}
$('#searchProblems').addEventListener('input',renderProblems);
$('#problemsList').addEventListener('click',e=>{const p=e.target.closest('[data-play]'),g=e.target.closest('[data-practice]');if(p){const i=+p.dataset.play;autoScroll($('#prob-'+i));speakPair(problems[i]);}if(g){const i=+g.dataset.practice;nav.clear();nav.history.push({item:problems[i]});nav.pos=nav.history.length-1;nav._save();nav._renderCurrent();switchTab('practice');autoScroll($('#practice-root'));}});
$('#playAllProblems').onclick=async()=>{for(let i=0;i<problems.length;i++){autoScroll($('#prob-'+i));await speakPair(problems[i]);if(!$('#autoPlayProblems').checked)break;await sleep(settings.delayNext*1000);}};
function shuffleTokens(en){const t=en.split(/\s+/).filter(Boolean);const a=t.slice();for(let i=a.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[a[i],a[j]]=[a[j],a[i]];}return{tokens:t,shuffled:a};}
function renderPractice(item){current=item;$('#jpText').textContent=item.jp||'';const {shuffled}=shuffleTokens(item.en);const c=$('#tokens');c.innerHTML='';const pool=document.createElement('div');pool.id='tokenPool';Object.assign(pool.style,{display:'flex',flexWrap:'wrap',gap:'8px'});const line=document.createElement('div');line.id='answerLine';line.className='sentence';Object.assign(line.style,{minHeight:'44px',padding:'8px',border:'1px dashed #ccc',borderRadius:'8px',marginTop:'10px',display:'flex',flexWrap:'wrap',gap:'8px'});c.appendChild(pool);c.appendChild(line);shuffled.forEach(tk=>pool.appendChild(makeChip(tk,'pool')));enableDnD(pool,line);$('#answerCard').style.display='none';updateCounters();}
function makeChip(text,place){const b=document.createElement('button');b.className='btn';b.textContent=text;b.dataset.token=text;b.dataset.place=place;b.style.touchAction='none';b.addEventListener('click',()=>{if(b.dataset.place==='pool'){$('#answerLine').appendChild(b);b.dataset.place='line';}else{$('#tokenPool').appendChild(b);b.dataset.place='pool';}});return b;}
const userAns=()=>Array.from($('#answerLine').children).map(x=>x.dataset.token).join(' ');
function enableDnD(pool,line){let dragging=null,origin=null,ph=null,offX=0,offY=0;const over=(e,el)=>{const r=el.getBoundingClientRect();return e.clientX>=r.left&&e.clientX<=r.right&&e.clientY>=r.top&&e.clientY<=r.bottom;};function onDown(e){const t=e.target.closest('button.btn');if(!t)return;e.preventDefault();dragging=t;origin=t.dataset.place;const r=t.getBoundingClientRect();offX=e.clientX-r.left;offY=e.clientY-r.top;t.classList.add('dragging');Object.assign(t.style,{position:'fixed',zIndex:'9999',pointerEvents:'none',left:r.left+'px',top:r.top+'px',width:r.width+'px'});ph=document.createElement('span');ph.className='btn';Object.assign(ph.style,{minWidth:r.width+'px',minHeight:r.height+'px',border:'1px dashed #999',opacity:.6});if(origin==='line')line.insertBefore(ph,t.nextSibling);window.addEventListener('pointermove',onMove,{passive:false});window.addEventListener('pointerup',onUp,{passive:false});}
function onMove(e){if(!dragging)return;e.preventDefault();dragging.style.left=(e.clientX-offX)+'px';dragging.style.top=(e.clientY-offY)+'px';const onLine=over(e,line),onPool=over(e,pool);if(onLine){if(!ph.isConnected||ph.parentElement!==line){ph.remove();line.appendChild(ph);}const kids=Array.from(line.children).filter(x=>x!==dragging);let placed=false;for(const ch of kids){const r=ch.getBoundingClientRect();const mid=r.left+r.width/2;if(e.clientX<mid){line.insertBefore(ph,ch);placed=true;break;}}if(!placed)line.appendChild(ph);}else if(onPool){if(ph.isConnected&&ph.parentElement===line)ph.remove();}}
function onUp(e){if(!dragging)return;window.removeEventListener('pointermove',onMove);window.removeEventListener('pointerup',onUp);dragging.classList.remove('dragging');Object.assign(dragging.style,{position:'',zIndex:'',pointerEvents:'',left:'',top:'',width:''});const onLine=over(e,line),onPool=over(e,pool);if(onLine){if(ph)line.insertBefore(dragging,ph);dragging.dataset.place='line';}else if(onPool){pool.appendChild(dragging);dragging.dataset.place='pool';}else{(origin==='line'?line:pool).appendChild(dragging);dragging.dataset.place=origin;}if(ph){ph.remove();ph=null;}dragging=null;origin=null;}pool.addEventListener('pointerdown',onDown);line.addEventListener('pointerdown',onDown);}
$('#checkBtn').onclick=()=>{const ok=normalizeEN(current.en)===normalizeEN(userAns());$('#answerCard').style.display='block';$('#answer').textContent=current.en;$('#answerCard').scrollIntoView({behavior:'smooth',block:'center'});pushHist({...current,correct:ok,user:userAns()});showToast(ok?'正解！':'もう一度');};
$('#revealBtn').onclick=()=>{$('#answerCard').style.display='block';$('#answer').textContent=current.en;};
$('#speakJP').onclick=()=>speakText(current.jp,'ja'); $('#speakEN').onclick=()=>speakText(current.en,'en');
$('#explainBtn').onclick=async()=>{settings.model=$('#modelSel').value||settings.model;try{$('#explainBtn').disabled=true;const text=await getExplanation({jp:current.jp,en:current.en,model:settings.model});$('#answerCard').style.display='block';$('#answer').textContent=current.en;$('#explain').textContent=text;}catch(e){alert('解説の取得に失敗: '+e.message);}finally{$('#explainBtn').disabled=false;}};
$('#nextBtn').onclick=()=>nav.next(); $('#prevBtn').onclick=()=>nav.prev();
import('./js/swipe-nav.js').then(({initSwipeNavigation})=>initSwipeNavigation({container:$('#practice-root'),onSwipeLeft:()=>nav.next(),onSwipeRight:()=>nav.prev()}));
let hist=JSON.parse(localStorage.getItem('history')||'[]');function pushHist(e){e.ts=Date.now();hist.unshift(e);if(hist.length>1000)hist.pop();localStorage.setItem('history',JSON.stringify(hist));renderHistory();}
function renderHistory(){const q=($('#searchHistory').value||'').toLowerCase();const list=$('#historyList');list.innerHTML='';hist.forEach((h,i)=>{if(q&&!((h.jp||'')+' '+(h.en||'')+' '+(h.user||'')).toLowerCase().includes(q))return;const d=document.createElement('div');d.className='item';d.id='hist-'+i;const date=new Date(h.ts).toLocaleString();d.innerHTML=`<div><strong>${escapeHtml(h.jp||'')}</strong></div><div class="muted">${escapeHtml(h.en||'')}</div><div class="meta">${h.correct?'◯':'×'} ／ ${date}</div><div class="row"><button class="btn" data-replay="${i}">読み上げ</button><button class="btn pri" data-again="${i}">この問題で練習</button></div>`;list.appendChild(d);});}
$('#searchHistory').addEventListener('input',renderHistory);
$('#historyList').addEventListener('click',e=>{const r=e.target.closest('[data-replay]'),a=e.target.closest('[data-again]');if(r){const i=+r.dataset.replay;autoScroll($('#hist-'+i));speakPair(hist[i]);}if(a){const i=+a.dataset.again;nav.clear();nav.history.push({item:hist[i]});nav.pos=nav.history.length-1;nav._save();nav._renderCurrent();switchTab('practice');autoScroll($('#practice-root'));}});
$('#clearHistory').onclick=()=>{if(confirm('履歴を削除しますか？')){hist=[];localStorage.setItem('history','[]');renderHistory();}};
$('#saveKey').onclick=()=>{const v=($('#apiKey').value||'').trim();if(!/^sk-/.test(v)){alert('sk- から始まるキーを入力');return;}localStorage.setItem('openai_api_key',v);$('#apiKey').value='';showToast('APIキーを保存しました');};
$('#testExplain').onclick=async()=>{try{const t=await getExplanation({jp:'舌部分切除後、RFFFで再建した。',en:'We inset a radial forearm free flap after partial glossectomy.',model:$('#modelSel').value});alert('OK\n\n'+t);}catch(e){alert('NG: '+e.message);}};
function loadVoices(){voices=speechSynthesis.getVoices();const j=$('#jpVoice'),e=$('#enVoice');j.innerHTML='';e.innerHTML='';voices.forEach(v=>{const opt=document.createElement('option');opt.value=v.name;opt.textContent=`${v.name} (${v.lang})`;if(v.lang.startsWith('ja'))j.appendChild(opt.cloneNode(true));if(v.lang.startsWith('en'))e.appendChild(opt);});if(!settings.jpVoice){const v=voices.find(v=>v.lang.startsWith('ja'));if(v)settings.jpVoice=v.name;}if(!settings.enVoice){const v=voices.find(v=>v.lang.startsWith('en-US'))||voices.find(v=>v.lang.startsWith('en'));if(v)settings.enVoice=v.name;}j.value=settings.jpVoice||'';e.value=settings.enVoice||'';}
speechSynthesis.onvoiceschanged=loadVoices; setTimeout(loadVoices,300);
$('#jpVoice').onchange=e=>settings.jpVoice=e.target.value; $('#enVoice').onchange=e=>settings.enVoice=e.target.value;
$('#delayJPEN').onchange=e=>settings.delayJPEN=Math.max(0.5,Math.min(10,+e.target.value)); $('#delayNext').onchange=e=>settings.delayNext=Math.max(0.5,Math.min(10,+e.target.value));
$('#repeatCount').onchange=e=>settings.repeatCount=Math.max(1,Math.min(10,Math.round(+e.target.value))); $('#volume').onchange=e=>settings.volume=Math.max(0,Math.min(1,+e.target.value));
$('#bgAudio').addEventListener('change',e=>{if(e.target.checked)startBG();else stopBG();}); function startBG(){if(bgStarted)return;bgStarted=true;const el=$('#silentLoop');el.volume=0.001;el.play().catch(()=>{});} function stopBG(){const el=$('#silentLoop');try{el.pause();}catch{} bgStarted=false;}
async function speakPair(it){await speakText(it.jp,'ja');await sleep(settings.delayJPEN*1000);await speakText(it.en,'en');}
async function speakText(text,lang){if(!text)return;if($('#bgAudio').checked)startBG();for(let k=0;k<settings.repeatCount;k++){await new Promise(res=>{const u=new SpeechSynthesisUtterance(text);const lst=speechSynthesis.getVoices();const vname=(lang==='ja')?settings.jpVoice:settings.enVoice;const v=lst.find(x=>x.name===vname)||lst.find(x=>x.lang.startsWith(lang));if(v)u.voice=v;u.lang=v?v.lang:(lang==='ja'?'ja-JP':'en-US');u.rate=1;u.pitch=1;u.volume=settings.volume;u.onend=()=>res();u.onerror=()=>res();try{speechSynthesis.speak(u);}catch{res();}});}}
$('#playPracticeAuto').onclick=async()=>{if(current)await speakPair(current);};
function updateCounters(){if(!scheduler)return;const s=scheduler.state;$('#deckInfo').textContent=currentDeckId;$('#roundInfo').textContent='Round '+s.round;$('#remainInfo').textContent='残り '+scheduler.remaining();}
let ready=false;function ensure(){if(ready)return;ready=true;}
function renderHistory(){/* filled above */} // placeholder (already defined)
renderHistory(); loadBuiltin();
